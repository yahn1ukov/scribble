package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"

	"github.com/99designs/gqlgen/graphql"
	"github.com/google/uuid"
	"github.com/yahn1ukov/scribble/apps/gateway/internal/grpc/models"
)

// UploadFile is the resolver for the uploadFile field.
func (r *mutationResolver) UploadFile(ctx context.Context, noteID uuid.UUID, file graphql.Upload) (bool, error) {
	req := &models.UploadFileRequest{
		Name:        file.Filename,
		Size:        file.Size,
		ContentType: file.ContentType,
		Content:     file.File,
	}

	if err := r.grpc.UploadFile(ctx, noteID, req); err != nil {
		return false, err
	}

	return true, nil
}

// RemoveFile is the resolver for the removeFile field.
func (r *mutationResolver) RemoveFile(ctx context.Context, id uuid.UUID, noteID uuid.UUID) (bool, error) {
	if err := r.grpc.RemoveFile(ctx, id, noteID); err != nil {
		return false, err
	}

	return true, nil
}
